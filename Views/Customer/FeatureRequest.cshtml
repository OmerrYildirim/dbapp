<!-- FeatureRequest.cshtml -->
@model dbapp.Models.FeatureRequestModel

<h2>Submit Feature Request</h2>

@using (Html.BeginForm("SubmitFeatureRequest", "Customer", FormMethod.Post))
{
    <div>
        <label for="Message">Message:</label>
        @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
    </div>
    <div>
        <label for="ProductName">Product Name:</label>
        @Html.DropDownListFor(model => model.ProductName, 
            new SelectList(ViewBag.Products, "Value", "Text"), 
            "Select a Product", 
            new { @class = "form-control" })
    </div>
    <div>
        <label for="Rating">Rating:</label>
        <div id="rating-container" class="star-rating">
            @for (int i = 1; i <= 5; i++)
            {
                <span class="star" data-value="@i">&#9733;</span>
            }
        </div>
        @Html.HiddenFor(model => model.Rating, new { id = "Rating" })
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>

    <div class="form-group text-center mt-3">
        <a asp-controller="Customer" asp-action="CustomerDashboard" class="text-black">Click for return previous
            page!</a>

    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stars = document.querySelectorAll(".star");
        const ratingInput = document.getElementById("Rating");

        stars.forEach((star) => {
            star.addEventListener("mouseenter", function () {
                resetStars();
                highlightStars(this.dataset.value);
            });

            star.addEventListener("mouseleave", function () {
                resetStars();
                highlightStars(ratingInput.value);
            });

            star.addEventListener("click", function () {
                ratingInput.value = this.dataset.value;
                highlightStars(this.dataset.value);
            });
        });

        function resetStars() {
            stars.forEach((star) => {
                star.classList.remove("selected");
            });
        }

        function highlightStars(rating) {
            stars.forEach((star) => {
                if (parseInt(star.dataset.value) <= parseInt(rating)) {
                    star.classList.add("selected");
                }
            });
        }
    });
</script>



<style>
    .star-rating {
        display: inline-flex;
        
        font-size: 2rem;
    }

    .star {
        color: #ddd;
        cursor: pointer;
        transition: color 0.2s;
    }

    .star:hover,
    .star:hover ~ .star {
        color: #ffc107;
    }

    .star.selected {
        color: #ffc107;
    }
</style>

